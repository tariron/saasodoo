Issue_ID,Status,Priority,Component,Date,Reporter,Title,Description,Root_Cause,Resolution_Status,Files_Modified
001,Resolved,Critical,user-service,2025-06-02,System Testing,Authentication Logout Session Invalidation,After user logout session tokens remained valid and could be reused for authentication creating a security vulnerability,The logout_customer() method in AuthService was not actually invalidating session tokens from the database. It only logged the logout event but left the session record intact in the user_sessions table,Resolved - Added invalidate_customer_session() method and updated logout route,"services/user-service/app/utils/database.py, services/user-service/app/routes/auth.py, services/user-service/app/services/auth_service.py"
002,Resolved,High,user-service,2025-06-02,User Testing,Authentication /auth/me Endpoint Crashes,The /auth/me endpoint was returning Customer not found errors and failing due to UUID conversion issue and missing dependencies,Customer ID was being returned as UUID object but UserProfileSchema expected string. Also attempting to query tenant database that wasn't accessible from user-service,Resolved - Fixed UUID conversion and applied workaround for missing dependencies,services/user-service/app/services/user_service.py
003,In Progress,High,tenant-service,2025-06-02,Architecture,Missing Tenant Service,Need to implement tenant-service to manage Odoo instance lifecycle and provide APIs for tenant operations,Tenant service not yet implemented for microservices architecture,In Progress - Basic tenant CRUD operations implemented,Multiple tenant-service files
004,Planned,Medium,billing-service,2025-06-02,Architecture,Missing Billing Service,Need to implement billing-service to manage subscriptions and payment processing for Zimbabwe market (PayNow EcoCash),Billing service not yet implemented,Planned - Not yet started,N/A
005,In Progress,Medium,Architecture,2025-06-02,Architecture,Service Communication Pattern,Establish proper service-to-service communication patterns and replace direct database queries with API calls,Services currently use direct database queries instead of API calls,In Progress - Ongoing architectural improvements,Multiple service files
006,Open,Medium,Architecture,2025-01-15,Development Team,Port Standardization Across Services,Currently services use different internal ports (user-service:8001 tenant-service:8002) which differs from microservices best practices,Services use different internal ports instead of standard port 5000,Open - Migration tasks defined,"infrastructure/compose/docker-compose.dev.yml, service Dockerfiles, service main.py files"
007,Resolved,High,instance-service,2025-06-03,Endpoint Testing,Instance Creation Endpoint Failure,The instance creation endpoint POST /api/v1/instances/ returns HTTP 500 Internal Server Error when attempting to create new Odoo instances,Data type mismatch in database layer - AsyncPG expects JSON-serialized strings for JSONB fields not Python objects,Resolved - Fixed database insertion with JSON serialization,services/instance-service/app/utils/database.py
008A,Resolved,Medium,Architecture,2025-06-30,Service Integration Analysis,Instance Provisioning Logic Gap,Current instance provisioning flow does not follow webhook-driven best practices. Instances are provisioned immediately upon request rather than waiting for billing confirmation,Services are tightly coupled with synchronous provisioning instead of event-driven architecture,Resolved - Implemented webhook-driven provisioning with proper billing confirmation,"services/billing-service/app/routes/webhooks.py, services/instance-service/app/routes/instances.py, shared/configs/postgres/04-init-schemas.sql.template"
008B,Workaround Applied,High,instance-service worker,2025-06-05,Instance Testing,Instance Worker Database Privileges Security Issue,The instance-service worker needs to create new PostgreSQL databases but currently requires admin-level database credentials violating principle of least privilege,Worker needs CREATE DATABASE privileges but currently has full admin access,Workaround Applied - Using admin credentials temporarily,"infrastructure/compose/docker-compose.dev.yml, shared/configs/postgres/03-create-users.sh"
009,Open,Medium,instance-service maintenance,2025-06-06,Architecture Review,MinIO Long-term Backup Storage Implementation,Current backup implementation uses local volume storage for all backup operations. Need MinIO S3-compatible storage for long-term backup archival,Local storage limitations - no off-site backup capability limited by local disk space,Open - Implementation tasks defined,"shared/utils/minio_client.py, services/instance-service/app/tasks/maintenance.py"
010,Open,Medium,instance-service,2025-06-06,Code Review,maintenance.py Refactoring Needed,The maintenance.py file has grown large (~1200+ lines) and contains multiple responsibilities that should be separated,Single file handling backup restore and update operations with mixed concerns,Open - Refactoring plan needed,services/instance-service/app/tasks/maintenance.py
011A,Open,High,instance-service,2025-06-06,Quality Assurance,Upgrade Functionality Not Tested,The Odoo version upgrade functionality exists in maintenance.py but has not been tested end-to-end,Update workflow implementation exists but no testing of actual Odoo version upgrades,Open - Testing required,services/instance-service/app/tasks/maintenance.py
012,Resolved,High,billing-infrastructure,2025-06-11,Database Permission Issues,KillBill/Kaui Database User Configuration,KillBill and Kaui services couldn't connect to databases due to custom user configuration conflicting with killbill/mariadb image's automatic setup,Used custom killbill user instead of root user that killbill/mariadb image expects,Resolved - Switched to root user configuration,infrastructure/compose/docker-compose.dev.yml
013,Open,Medium,instance-service,2025-06-18,Testing,Instance Status Sync Issue,Database instance status becomes out of sync with actual Docker container state,No background health monitoring service and database only updated via API endpoints,Open - Background monitoring needed,Multiple instance-service files
014,Open,High,instance-service,2025-06-20,Dashboard Testing,Health Check Timeout Causes False Error Status,Instance provisioning marks instances as error when Odoo takes longer than 120 seconds to start even when instance eventually becomes healthy,Health check timeout set to 120 seconds is too short for Odoo startup and no retry mechanism,Open - Timeout increase and retry logic needed,services/instance-service/app/tasks/provisioning.py
015,Open,High,billing-service instance-service,2025-06-26,Architecture Review,Hardcoded Plan Pricing Instead of KillBill Catalog Integration,The system currently uses hardcoded plan mappings in application code instead of fetching pricing and plan information from KillBill's native catalog system,Billing integration implemented with static plan mappings rather than dynamic catalog fetching from KillBill,Open - KillBill catalog integration needed,"services/billing-service/app/utils/killbill_client.py, services/instance-service/app/utils/billing_client.py"
011B,Resolved - No Issue Found,Medium,frontend-service user-service,2025-01-15,User Testing,Password Validation Mismatch Between Frontend and Backend,Frontend password validation accepts passwords that backend rejects creating user confusion during registration,Investigation revealed issue description was outdated - both frontend and backend require all criteria,Resolved - No action required both validations properly aligned,"services/frontend-service/frontend/src/pages/Register.tsx, shared/schemas/user.py"
version: 1
disable_existing_loggers: false

formatters:
  default:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  detailed:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(module)s - %(funcName)s - %(lineno)d - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  json:
    format: '{"timestamp": "%(asctime)s", "logger": "%(name)s", "level": "%(levelname)s", "module": "%(module)s", "function": "%(funcName)s", "line": %(lineno)d, "message": "%(message)s"}'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  access:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: default
    stream: ext://sys.stdout
  
  file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: /var/log/odoo-saas/app.log
    maxBytes: 104857600  # 100MB
    backupCount: 5
    encoding: utf8
  
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: /var/log/odoo-saas/error.log
    maxBytes: 104857600  # 100MB
    backupCount: 5
    encoding: utf8
  
  json_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: /var/log/odoo-saas/app.json
    maxBytes: 104857600  # 100MB
    backupCount: 5
    encoding: utf8
  
  access_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: access
    filename: /var/log/odoo-saas/access.log
    maxBytes: 104857600  # 100MB
    backupCount: 5
    encoding: utf8

loggers:
  # Root logger
  root:
    level: INFO
    handlers: [console, file, error_file]
    propagate: false
  
  # Application loggers
  odoo_saas:
    level: INFO
    handlers: [console, file, json_file]
    propagate: false
  
  odoo_saas.user_service:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  odoo_saas.instance_service:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  odoo_saas.billing_service:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  odoo_saas.notification_service:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  odoo_saas.admin_service:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  odoo_saas.web_app:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  # Third-party loggers
  uvicorn:
    level: INFO
    handlers: [console, access_file]
    propagate: false
  
  uvicorn.access:
    level: INFO
    handlers: [access_file]
    propagate: false
  
  uvicorn.error:
    level: INFO
    handlers: [console, error_file]
    propagate: false
  
  fastapi:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  sqlalchemy:
    level: WARNING
    handlers: [console, file]
    propagate: false
  
  sqlalchemy.engine:
    level: WARNING
    handlers: [file]
    propagate: false
  
  redis:
    level: WARNING
    handlers: [console, file]
    propagate: false
  
  docker:
    level: WARNING
    handlers: [console, file]
    propagate: false
  
  requests:
    level: WARNING
    handlers: [file]
    propagate: false
  
  urllib3:
    level: WARNING
    handlers: [file]
    propagate: false

# Environment-specific overrides
development:
  loggers:
    root:
      level: DEBUG
    odoo_saas:
      level: DEBUG
    sqlalchemy.engine:
      level: INFO

production:
  handlers:
    console:
      level: WARNING
  loggers:
    root:
      level: INFO
    odoo_saas:
      level: INFO
    sqlalchemy.engine:
      level: WARNING

testing:
  handlers:
    console:
      level: DEBUG
    file:
      filename: /tmp/test.log
  loggers:
    root:
      level: DEBUG
    odoo_saas:
      level: DEBUG 
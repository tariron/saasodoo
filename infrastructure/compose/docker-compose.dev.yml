version: '3.8'

services:
  # Reverse Proxy & Load Balancer
  traefik:
    image: traefik:v3.0
    container_name: saasodoo-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ../traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ../traefik/dynamic:/etc/traefik/dynamic:ro
      - traefik-certificates:/certificates
    networks:
      - saasodoo-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${BASE_DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$2y$$10$$rQ7yX9kx3bX8rQ7yX9kx3e"  # admin:admin

  # Database
  postgres:
    image: postgres:15-alpine
    container_name: saasodoo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: ${POSTGRES_MULTIPLE_DATABASES}
      # Service user passwords for initialization scripts
      POSTGRES_READONLY_PASSWORD: ${POSTGRES_READONLY_PASSWORD}
      POSTGRES_BACKUP_PASSWORD: ${POSTGRES_BACKUP_PASSWORD}
      POSTGRES_AUTH_SERVICE_PASSWORD: ${POSTGRES_AUTH_SERVICE_PASSWORD}
      POSTGRES_BILLING_SERVICE_PASSWORD: ${POSTGRES_BILLING_SERVICE_PASSWORD}
      POSTGRES_TENANT_SERVICE_PASSWORD: ${POSTGRES_TENANT_SERVICE_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../../shared/configs/postgres:/docker-entrypoint-initdb.d
    networks:
      - saasodoo-network
    ports:
      - "5432:5432"
    labels:
      - "traefik.enable=false"

  # Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: saasodoo-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@saasodoo.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_DISABLE_POSTFIX: true
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ../../shared/configs/pgadmin/servers.json:/pgadmin4/servers.json:ro
    networks:
      - saasodoo-network
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.${BASE_DOMAIN}`)"
      - "traefik.http.routers.pgadmin.service=pgadmin"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: saasodoo-redis
    restart: unless-stopped
    command: redis-server /etc/redis/redis.conf
    volumes:
      - redis-data:/data
      - ../../shared/configs/redis.conf:/etc/redis/redis.conf:ro
    networks:
      - saasodoo-network
    ports:
      - "6379:6379"
    labels:
      - "traefik.enable=false"

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: saasodoo-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-saasodoo}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-saasodoo123}
      RABBITMQ_DEFAULT_VHOST: saasodoo
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - saasodoo-network
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.${BASE_DOMAIN}`)"
      - "traefik.http.routers.rabbitmq.service=rabbitmq"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: saasodoo-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - saasodoo-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${BASE_DOMAIN}`)"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    image: grafana/grafana:latest
    container_name: saasodoo-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_ADMIN_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana-data:/var/lib/grafana
      - ../monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ../monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - saasodoo-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${BASE_DOMAIN}`)"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  # Log Management
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: saasodoo-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - saasodoo-network
    labels:
      - "traefik.enable=false"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: saasodoo-kibana
    restart: unless-stopped
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - saasodoo-network
    depends_on:
      - elasticsearch
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kibana.rule=Host(`kibana.${BASE_DOMAIN}`)"
      - "traefik.http.routers.kibana.service=kibana"
      - "traefik.http.services.kibana.loadbalancer.server.port=5601"

  # Development Tools
  mailhog:
    image: mailhog/mailhog:latest
    container_name: saasodoo-mailhog
    restart: unless-stopped
    networks:
      - saasodoo-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailhog.rule=Host(`mail.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mailhog.service=mailhog"
      - "traefik.http.services.mailhog.loadbalancer.server.port=8025"

  # Shared Volume for File Storage
  minio:
    image: minio/minio:latest
    container_name: saasodoo-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio-data:/data
    networks:
      - saasodoo-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.${BASE_DOMAIN}`)"
      - "traefik.http.routers.minio.service=minio"
      - "traefik.http.services.minio.loadbalancer.server.port=9001"
      - "traefik.http.routers.minio-api.rule=Host(`s3.${BASE_DOMAIN}`)"
      - "traefik.http.routers.minio-api.service=minio-api"
      - "traefik.http.services.minio-api.loadbalancer.server.port=9000"

networks:
  saasodoo-network:
    driver: bridge
    name: saasodoo-network

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  rabbitmq-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  elasticsearch-data:
    driver: local
  minio-data:
    driver: local
  traefik-certificates:
    driver: local
  pgadmin-data:
    driver: local 